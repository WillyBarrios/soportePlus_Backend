"""Agregar campo Fecha_apertura a tabla Tiquet

Revision ID: eb51d1c131fe
Revises: ea2496fd28b6
Create Date: 2025-10-27 22:46:53.063177

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'eb51d1c131fe'
down_revision = 'ea2496fd28b6'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('email'))
        batch_op.drop_index(batch_op.f('username'))

    op.drop_table('users')
    with op.batch_alter_table('Catalogo_criticidad', schema=None) as batch_op:
        batch_op.alter_column('Nombre',
               existing_type=mysql.VARCHAR(length=50),
               type_=sa.String(length=255),
               existing_nullable=True)

    with op.batch_alter_table('Comentarios', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('Comentarios_ibfk_1'), type_='foreignkey')

    with op.batch_alter_table('Estado_tiquet', schema=None) as batch_op:
        batch_op.alter_column('Nombre',
               existing_type=mysql.VARCHAR(length=255),
               nullable=True)

    with op.batch_alter_table('Log_transaccional', schema=None) as batch_op:
        batch_op.add_column(sa.Column('Id_log', sa.Integer(), autoincrement=True, nullable=False))
        batch_op.add_column(sa.Column('Usuario', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('Tiquet', sa.Integer(), nullable=True))
        batch_op.alter_column('Accion',
               existing_type=mysql.VARCHAR(length=50),
               type_=sa.String(length=255),
               existing_nullable=True)
        batch_op.drop_constraint(batch_op.f('Log_transaccional_ibfk_3'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('Log_transaccional_ibfk_1'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('Log_transaccional_ibfk_2'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'Tiquet', ['Tiquet'], ['Id_Tiquet'])
        batch_op.create_foreign_key(None, 'Usuario', ['Usuario'], ['ID_usuario'])
        batch_op.drop_column('detalle_cambio')
        batch_op.drop_column('tiquet')
        batch_op.drop_column('usuario')
        batch_op.drop_column('ID_log')
        batch_op.drop_column('Comentario')
        batch_op.drop_column('Fecha_cambio')

    with op.batch_alter_table('Nivel_de_Satisfaccion', schema=None) as batch_op:
        batch_op.add_column(sa.Column('ID_nivel', sa.Integer(), autoincrement=True, nullable=False))
        batch_op.add_column(sa.Column('Nombre', sa.String(length=255), nullable=True))
        batch_op.drop_column('nivel')
        batch_op.drop_column('Id_satisfaccion')

    with op.batch_alter_table('Permiso', schema=None) as batch_op:
        batch_op.alter_column('Nombre',
               existing_type=mysql.VARCHAR(length=50),
               type_=sa.String(length=255),
               nullable=True)
        batch_op.drop_column('Accion')

    with op.batch_alter_table('Rol', schema=None) as batch_op:
        batch_op.alter_column('Nombre',
               existing_type=mysql.VARCHAR(length=50),
               type_=sa.String(length=255),
               nullable=True)

    with op.batch_alter_table('Rol_Permiso', schema=None) as batch_op:
        batch_op.add_column(sa.Column('ID_RolPermiso', sa.Integer(), autoincrement=True, nullable=False))
        batch_op.alter_column('ID_Rol',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True)
        batch_op.alter_column('ID_Permiso',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True)

    with op.batch_alter_table('Tiquet', schema=None) as batch_op:
        batch_op.drop_column('Fecha_cierre')

    with op.batch_alter_table('Ubicaciones', schema=None) as batch_op:
        batch_op.alter_column('Nombre',
               existing_type=mysql.VARCHAR(length=255),
               nullable=True)
        batch_op.drop_column('Zona')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('Ubicaciones', schema=None) as batch_op:
        batch_op.add_column(sa.Column('Zona', mysql.VARCHAR(length=255), nullable=True))
        batch_op.alter_column('Nombre',
               existing_type=mysql.VARCHAR(length=255),
               nullable=False)

    with op.batch_alter_table('Tiquet', schema=None) as batch_op:
        batch_op.add_column(sa.Column('Fecha_cierre', sa.DATE(), nullable=True))

    with op.batch_alter_table('Rol_Permiso', schema=None) as batch_op:
        batch_op.alter_column('ID_Permiso',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False)
        batch_op.alter_column('ID_Rol',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False)
        batch_op.drop_column('ID_RolPermiso')

    with op.batch_alter_table('Rol', schema=None) as batch_op:
        batch_op.alter_column('Nombre',
               existing_type=sa.String(length=255),
               type_=mysql.VARCHAR(length=50),
               nullable=False)

    with op.batch_alter_table('Permiso', schema=None) as batch_op:
        batch_op.add_column(sa.Column('Accion', mysql.ENUM('U', 'D', 'I', 'R'), nullable=False))
        batch_op.alter_column('Nombre',
               existing_type=sa.String(length=255),
               type_=mysql.VARCHAR(length=50),
               nullable=False)

    with op.batch_alter_table('Nivel_de_Satisfaccion', schema=None) as batch_op:
        batch_op.add_column(sa.Column('Id_satisfaccion', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False))
        batch_op.add_column(sa.Column('nivel', mysql.VARCHAR(length=255), nullable=True))
        batch_op.drop_column('Nombre')
        batch_op.drop_column('ID_nivel')

    with op.batch_alter_table('Log_transaccional', schema=None) as batch_op:
        batch_op.add_column(sa.Column('Fecha_cambio', mysql.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('Comentario', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('ID_log', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False))
        batch_op.add_column(sa.Column('usuario', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('tiquet', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('detalle_cambio', mysql.TEXT(), nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('Log_transaccional_ibfk_2'), 'Comentarios', ['Comentario'], ['ID_comentario'])
        batch_op.create_foreign_key(batch_op.f('Log_transaccional_ibfk_1'), 'Tiquet', ['tiquet'], ['Id_Tiquet'])
        batch_op.create_foreign_key(batch_op.f('Log_transaccional_ibfk_3'), 'Usuario', ['usuario'], ['ID_usuario'])
        batch_op.alter_column('Accion',
               existing_type=sa.String(length=255),
               type_=mysql.VARCHAR(length=50),
               existing_nullable=True)
        batch_op.drop_column('Tiquet')
        batch_op.drop_column('Usuario')
        batch_op.drop_column('Id_log')

    with op.batch_alter_table('Estado_tiquet', schema=None) as batch_op:
        batch_op.alter_column('Nombre',
               existing_type=mysql.VARCHAR(length=255),
               nullable=False)

    with op.batch_alter_table('Comentarios', schema=None) as batch_op:
        batch_op.create_foreign_key(batch_op.f('Comentarios_ibfk_1'), 'Nivel_de_Satisfaccion', ['Satisfaccion'], ['Id_satisfaccion'])

    with op.batch_alter_table('Catalogo_criticidad', schema=None) as batch_op:
        batch_op.alter_column('Nombre',
               existing_type=sa.String(length=255),
               type_=mysql.VARCHAR(length=50),
               existing_nullable=True)

    op.create_table('users',
    sa.Column('username', mysql.VARCHAR(length=80), nullable=False),
    sa.Column('email', mysql.VARCHAR(length=120), nullable=False),
    sa.Column('password_hash', mysql.VARCHAR(length=255), nullable=False),
    sa.Column('first_name', mysql.VARCHAR(length=50), nullable=False),
    sa.Column('last_name', mysql.VARCHAR(length=50), nullable=False),
    sa.Column('is_active', mysql.TINYINT(display_width=1), autoincrement=False, nullable=False),
    sa.Column('is_admin', mysql.TINYINT(display_width=1), autoincrement=False, nullable=False),
    sa.Column('id', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),
    sa.Column('created_at', mysql.DATETIME(), nullable=False),
    sa.Column('updated_at', mysql.DATETIME(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_general_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('username'), ['username'], unique=True)
        batch_op.create_index(batch_op.f('email'), ['email'], unique=True)

    # ### end Alembic commands ###
